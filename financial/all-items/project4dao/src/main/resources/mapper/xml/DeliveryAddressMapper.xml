<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xa.mapper.DeliveryAddressMapper" >
  <resultMap id="BaseResultMap" type="com.xa.entity.DeliveryAddress" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="card_id_back_file" property="cardIdBackFile" jdbcType="BIGINT" />
    <result column="card_id_front_file" property="cardIdFrontFile" jdbcType="BIGINT" />
    <result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="area_id" property="areaId" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="INTEGER" />
    <result column="used" property="used" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, mobile, card_id_back_file, card_id_front_file, buyer_id, idcard, area_id, 
    address, is_default,used
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from delivery_address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from delivery_address
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xa.entity.DeliveryAddress" useGeneratedKeys="true" keyProperty="id">
    insert into delivery_address (id, name, mobile, 
      card_id_back_file, card_id_front_file, buyer_id, 
      idcard, area_id, address, 
      is_default,used)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{cardIdBackFile,jdbcType=BIGINT}, #{cardIdFrontFile,jdbcType=BIGINT}, #{buyerId,jdbcType=BIGINT}, 
      #{idcard,jdbcType=VARCHAR}, #{areaId,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=INTEGER},#{used})
  </insert>
  <insert id="insertSelective" parameterType="com.xa.entity.DeliveryAddress" >
    insert into delivery_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="cardIdBackFile != null" >
        card_id_back_file,
      </if>
      <if test="cardIdFrontFile != null" >
        card_id_front_file,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="areaId != null" >
        area_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="cardIdBackFile != null" >
        #{cardIdBackFile,jdbcType=BIGINT},
      </if>
      <if test="cardIdFrontFile != null" >
        #{cardIdFrontFile,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xa.entity.DeliveryAddress" >
    update delivery_address
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="cardIdBackFile != null" >
        card_id_back_file = #{cardIdBackFile,jdbcType=BIGINT},
      </if>
      <if test="cardIdFrontFile != null" >
        card_id_front_file = #{cardIdFrontFile,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        area_id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=INTEGER},
      </if>
      <if test="used != null">
         used = #{used}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xa.entity.DeliveryAddress" >
    update delivery_address
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      card_id_back_file = #{cardIdBackFile,jdbcType=BIGINT},
      card_id_front_file = #{cardIdFrontFile,jdbcType=BIGINT},
      buyer_id = #{buyerId,jdbcType=BIGINT},
      idcard = #{idcard,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 获取所有地址根据买家id -->
  <select id="getAddressByBuyerId" resultType="com.xa.entity.DeliveryAddress" parameterType="long">
    select
    t.card_id_back_file as cardIdBackFile,
    t.card_id_front_file as cardIdFrontFile,
    t.buyer_id as buyerId,
    t.is_default as isDefault,
    t.area_id as areaId,
    t.* from  delivery_address t where buyer_id=#{buyerId} and used=1
  </select>
  
  <!-- 设置所有地址为非默认 -->
  <update id="updateAddressIsNotDefault" parameterType="long">
  update delivery_address set is_default=0 where buyer_id=#{buyerId}
  </update>
   
   <!-- 获取用户默认地址 -->
   <select id="getDefaultAddressByBuyerId" resultType="com.xa.entity.DeliveryAddress" parameterType="long">
     select 
      t.card_id_back_file as cardIdBackFile,
    t.card_id_front_file as cardIdFrontFile,
    t.buyer_id as buyerId,
    t.is_default as isDefault,
    t.area_id as areaId,
     t.* from delivery_address t where buyer_id=#{buyerId} and is_default=1
   </select>
   
</mapper>