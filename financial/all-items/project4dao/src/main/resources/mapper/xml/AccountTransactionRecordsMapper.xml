<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xa.mapper.AccountTransactionRecordsMapper" >
  <resultMap id="BaseResultMap" type="com.xa.entity.AccountTransactionRecords" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="wallet_id" property="walletId" jdbcType="BIGINT" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="operation_date" property="operationDate" jdbcType="TIMESTAMP" />
    <result column="money" property="money" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, wallet_id, type_id, note, operation_date, money
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from account_transaction_records
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from account_transaction_records
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xa.entity.AccountTransactionRecords" >
    insert into account_transaction_records (id, wallet_id, type_id, 
      note, operation_date, money
      )
    values (#{id,jdbcType=BIGINT}, #{walletId,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT}, 
      #{note,jdbcType=VARCHAR}, #{operationDate,jdbcType=TIMESTAMP}, #{money,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xa.entity.AccountTransactionRecords" >
    insert into account_transaction_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="walletId != null" >
        wallet_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="operationDate != null" >
        operation_date,
      </if>
      <if test="money != null" >
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="walletId != null" >
        #{walletId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="operationDate != null" >
        #{operationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        #{money,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xa.entity.AccountTransactionRecords" >
    update account_transaction_records
    <set >
      <if test="walletId != null" >
        wallet_id = #{walletId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="operationDate != null" >
        operation_date = #{operationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xa.entity.AccountTransactionRecords" >
    update account_transaction_records
    set wallet_id = #{walletId,jdbcType=BIGINT},
      type_id = #{typeId,jdbcType=BIGINT},
      note = #{note,jdbcType=VARCHAR},
      operation_date = #{operationDate,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findAll" resultType="com.xa.entity.AccountTransactionRecords">
   SELECT
	t.wallet_id AS walletId,
	t.type_id AS typeId,
	t.operation_date AS operationDate,
	t.*
FROM
	account_transaction_records t
  </select>
</mapper>