<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xa.mapper.ActivityAssociatedMapper" >
  <resultMap id="BaseResultMap" type="com.xa.entity.ActivityAssociated" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="activity_id" property="activityId" jdbcType="BIGINT" />
    <result column="associate_id" property="associateId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, activity_id, associate_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from activity_associated
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from activity_associated
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xa.entity.ActivityAssociated"  useGeneratedKeys="true" keyProperty="id">
    insert into activity_associated (id, activity_id, 
      associate_id)
    values (#{id,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT}, 
      #{associateId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xa.entity.ActivityAssociated" >
    insert into activity_associated
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="activityType != null" >
        activity_type,
      </if>
      <if test="associateId != null" >
        associate_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="activityType != null" >
        #{activityType,jdbcType=INTEGER},
      </if>
      <if test="associateId != null" >
        #{associateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xa.entity.ActivityAssociated" >
    update activity_associated
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="associateId != null" >
        associate_id = #{associateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.xa.entity.ActivityAssociated" >
    update activity_associated
    set activity_id = #{activityId,jdbcType=BIGINT},
      activity_type = #{activityType,jdbcType=INTEGER},
      associate_id = #{associateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getAssoByActivityId" resultType="com.xa.entity.ActivityAssociated" parameterType="long">
       select 
       t.activity_id as activityId,
       t.associate_id as associateId,
       t.* from activity_associated t where t.activity_id=#{activityId}
  </select>  
  
  
  <delete id="deleteASByActivityId" parameterType="long">
    delete from activity_associated where activity_id=#{activityId}
  </delete>
  
  <select id="getCheckBrandByActivityId" parameterType="long" resultType="com.xa.dto.AssoActivityDto">
SELECT
	t.*
FROM
	(
		SELECT
			b.id,
			b.name,
		IF (
			aa.associateId IS NOT NULL,
			TRUE,
			FALSE
		) AS checked
		FROM
			brand b
		LEFT JOIN (
			SELECT
				associate_id AS associateId
			FROM
				activity_associated
			WHERE
				activity_id = #{activityId}
		) aa ON b.id = aa.associateId
	) t
  </select>
  
  <select id="getCheckCountryByActivityId" parameterType="long" resultType="com.xa.dto.AssoActivityDto">
   
  SELECT
	t.*
FROM
	(
		SELECT
			c.id,
			c.name,
		IF (
			aa.associateId IS NOT NULL,
			TRUE,
			FALSE
		) AS checked
		FROM
		  country c
		LEFT JOIN (
			SELECT
				associate_id AS associateId
			FROM
				activity_associated
			WHERE
				activity_id = #{activityId}
		) aa ON c.id = aa.associateId
	) t
  </select>
  
  
</mapper>